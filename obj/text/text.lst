                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module text
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _itoa
                             12 	.globl _cpct_getScreenPtr
                             13 	.globl _cpct_waitVSYNC
                             14 	.globl _cpct_drawSpriteMaskedAlignedTable
                             15 	.globl _cpct_drawSprite
                             16 	.globl _swapColors
                             17 	.globl _numbers
                             18 	.globl _font
                             19 	.globl _strLength
                             20 	.globl _strCopy
                             21 	.globl _drawNumber
                             22 	.globl _drawText
                             23 	.globl _drawText2
                             24 ;--------------------------------------------------------
                             25 ; special function registers
                             26 ;--------------------------------------------------------
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area _DATA
                             31 ;--------------------------------------------------------
                             32 ; ram data
                             33 ;--------------------------------------------------------
                             34 	.area _INITIALIZED
                             35 ;--------------------------------------------------------
                             36 ; absolute external ram data
                             37 ;--------------------------------------------------------
                             38 	.area _DABS (ABS)
                             39 ;--------------------------------------------------------
                             40 ; global & static initialisations
                             41 ;--------------------------------------------------------
                             42 	.area _HOME
                             43 	.area _GSINIT
                             44 	.area _GSFINAL
                             45 	.area _GSINIT
                             46 ;--------------------------------------------------------
                             47 ; Home
                             48 ;--------------------------------------------------------
                             49 	.area _HOME
                             50 	.area _HOME
                             51 ;--------------------------------------------------------
                             52 ; code
                             53 ;--------------------------------------------------------
                             54 	.area _CODE
                             55 ;src/text/text.c:54: char *itoa(int value, char *result, int base)
                             56 ;	---------------------------------
                             57 ; Function itoa
                             58 ; ---------------------------------
   0000                      59 _itoa::
   0000 DD E5         [15]   60 	push	ix
   0002 DD 21 00 00   [14]   61 	ld	ix,#0
   0006 DD 39         [15]   62 	add	ix,sp
   0008 21 F9 FF      [10]   63 	ld	hl, #-7
   000B 39            [11]   64 	add	hl, sp
   000C F9            [ 6]   65 	ld	sp, hl
                             66 ;src/text/text.c:58: char *ptr = result, *ptr1 = result, tmp_char;
   000D DD 5E 06      [19]   67 	ld	e,6 (ix)
   0010 DD 56 07      [19]   68 	ld	d,7 (ix)
   0013 DD 73 FA      [19]   69 	ld	-6 (ix), e
   0016 DD 72 FB      [19]   70 	ld	-5 (ix), d
                             71 ;src/text/text.c:61: if (base < 2 || base > 36)
   0019 DD 7E 08      [19]   72 	ld	a, 8 (ix)
   001C D6 02         [ 7]   73 	sub	a, #0x02
   001E DD 7E 09      [19]   74 	ld	a, 9 (ix)
   0021 17            [ 4]   75 	rla
   0022 3F            [ 4]   76 	ccf
   0023 1F            [ 4]   77 	rra
   0024 DE 80         [ 7]   78 	sbc	a, #0x80
   0026 38 12         [12]   79 	jr	C,00101$
   0028 3E 24         [ 7]   80 	ld	a, #0x24
   002A DD BE 08      [19]   81 	cp	a, 8 (ix)
   002D 3E 00         [ 7]   82 	ld	a, #0x00
   002F DD 9E 09      [19]   83 	sbc	a, 9 (ix)
   0032 E2r37r00      [10]   84 	jp	PO, 00140$
   0035 EE 80         [ 7]   85 	xor	a, #0x80
   0037                      86 00140$:
   0037 F2r40r00      [10]   87 	jp	P, 00115$
   003A                      88 00101$:
                             89 ;src/text/text.c:63: *result = '\0';
   003A AF            [ 4]   90 	xor	a, a
   003B 12            [ 7]   91 	ld	(de), a
                             92 ;src/text/text.c:64: return result;
   003C EB            [ 4]   93 	ex	de,hl
   003D C3rE1r00      [10]   94 	jp	00112$
                             95 ;src/text/text.c:67: do
   0040                      96 00115$:
   0040 DD 73 FE      [19]   97 	ld	-2 (ix), e
   0043 DD 72 FF      [19]   98 	ld	-1 (ix), d
   0046                      99 00104$:
                            100 ;src/text/text.c:69: tmp_value = value;
   0046 DD 7E 04      [19]  101 	ld	a, 4 (ix)
   0049 DD 77 FC      [19]  102 	ld	-4 (ix), a
   004C DD 7E 05      [19]  103 	ld	a, 5 (ix)
   004F DD 77 FD      [19]  104 	ld	-3 (ix), a
                            105 ;src/text/text.c:70: value /= base;
   0052 DD 6E 08      [19]  106 	ld	l,8 (ix)
   0055 DD 66 09      [19]  107 	ld	h,9 (ix)
   0058 E5            [11]  108 	push	hl
   0059 DD 6E FC      [19]  109 	ld	l,-4 (ix)
   005C DD 66 FD      [19]  110 	ld	h,-3 (ix)
   005F E5            [11]  111 	push	hl
   0060 CDr00r00      [17]  112 	call	__divsint
   0063 F1            [10]  113 	pop	af
   0064 F1            [10]  114 	pop	af
   0065 DD 75 04      [19]  115 	ld	4 (ix), l
   0068 DD 74 05      [19]  116 	ld	5 (ix), h
                            117 ;src/text/text.c:71: *ptr++ = "zyxwvutsrqponmlkjihgfedcba9876543210123456789abcdefghijklmnopqrstuvwxyz" [35 + (tmp_value - value * base)];
   006B DD 4E FC      [19]  118 	ld	c, -4 (ix)
   006E DD 5E 04      [19]  119 	ld	e, 4 (ix)
   0071 DD 66 08      [19]  120 	ld	h, 8 (ix)
   0074 2E 00         [ 7]  121 	ld	l, #0x00
   0076 55            [ 4]  122 	ld	d, l
   0077 06 08         [ 7]  123 	ld	b, #0x08
   0079                     124 00141$:
   0079 29            [11]  125 	add	hl, hl
   007A 30 01         [12]  126 	jr	NC,00142$
   007C 19            [11]  127 	add	hl, de
   007D                     128 00142$:
   007D 10 FA         [13]  129 	djnz	00141$
   007F 79            [ 4]  130 	ld	a, c
   0080 95            [ 4]  131 	sub	a, l
   0081 C6 23         [ 7]  132 	add	a, #0x23
   0083 4F            [ 4]  133 	ld	c, a
   0084 17            [ 4]  134 	rla
   0085 9F            [ 4]  135 	sbc	a, a
   0086 47            [ 4]  136 	ld	b, a
   0087 21r56r01      [10]  137 	ld	hl, #___str_0
   008A 09            [11]  138 	add	hl, bc
   008B 4E            [ 7]  139 	ld	c, (hl)
   008C DD 6E FE      [19]  140 	ld	l,-2 (ix)
   008F DD 66 FF      [19]  141 	ld	h,-1 (ix)
   0092 71            [ 7]  142 	ld	(hl), c
   0093 DD 34 FE      [23]  143 	inc	-2 (ix)
   0096 20 03         [12]  144 	jr	NZ,00143$
   0098 DD 34 FF      [23]  145 	inc	-1 (ix)
   009B                     146 00143$:
                            147 ;src/text/text.c:73: while ( value );
   009B DD 7E 05      [19]  148 	ld	a, 5 (ix)
   009E DD B6 04      [19]  149 	or	a,4 (ix)
   00A1 20 A3         [12]  150 	jr	NZ,00104$
                            151 ;src/text/text.c:76: if (tmp_value < 0) *ptr++ = '-';
   00A3 DD 4E FE      [19]  152 	ld	c,-2 (ix)
   00A6 DD 46 FF      [19]  153 	ld	b,-1 (ix)
   00A9 DD CB FD 7E   [20]  154 	bit	7, -3 (ix)
   00AD 28 0F         [12]  155 	jr	Z,00108$
   00AF DD 6E FE      [19]  156 	ld	l,-2 (ix)
   00B2 DD 66 FF      [19]  157 	ld	h,-1 (ix)
   00B5 36 2D         [10]  158 	ld	(hl), #0x2d
   00B7 DD 4E FE      [19]  159 	ld	c,-2 (ix)
   00BA DD 46 FF      [19]  160 	ld	b,-1 (ix)
   00BD 03            [ 6]  161 	inc	bc
   00BE                     162 00108$:
                            163 ;src/text/text.c:77: *ptr-- = '\0';
   00BE AF            [ 4]  164 	xor	a, a
   00BF 02            [ 7]  165 	ld	(bc), a
   00C0 0B            [ 6]  166 	dec	bc
                            167 ;src/text/text.c:78: while(ptr1 < ptr)
   00C1 DD 5E FA      [19]  168 	ld	e,-6 (ix)
   00C4 DD 56 FB      [19]  169 	ld	d,-5 (ix)
   00C7                     170 00109$:
   00C7 7B            [ 4]  171 	ld	a, e
   00C8 91            [ 4]  172 	sub	a, c
   00C9 7A            [ 4]  173 	ld	a, d
   00CA 98            [ 4]  174 	sbc	a, b
   00CB 30 0E         [12]  175 	jr	NC,00111$
                            176 ;src/text/text.c:80: tmp_char = *ptr;
   00CD 0A            [ 7]  177 	ld	a, (bc)
   00CE DD 77 F9      [19]  178 	ld	-7 (ix), a
                            179 ;src/text/text.c:81: *ptr-- = *ptr1;
   00D1 1A            [ 7]  180 	ld	a, (de)
   00D2 02            [ 7]  181 	ld	(bc), a
   00D3 0B            [ 6]  182 	dec	bc
                            183 ;src/text/text.c:82: *ptr1++ = tmp_char;
   00D4 DD 7E F9      [19]  184 	ld	a, -7 (ix)
   00D7 12            [ 7]  185 	ld	(de), a
   00D8 13            [ 6]  186 	inc	de
   00D9 18 EC         [12]  187 	jr	00109$
   00DB                     188 00111$:
                            189 ;src/text/text.c:84: return result;
   00DB DD 6E 06      [19]  190 	ld	l,6 (ix)
   00DE DD 66 07      [19]  191 	ld	h,7 (ix)
   00E1                     192 00112$:
   00E1 DD F9         [10]  193 	ld	sp, ix
   00E3 DD E1         [14]  194 	pop	ix
   00E5 C9            [10]  195 	ret
   00E6                     196 _font:
   00E6r00r00               197 	.dw _g_fonts_small_00
   00E8r00r00               198 	.dw _g_fonts_small_01
   00EAr00r00               199 	.dw _g_fonts_small_02
   00ECr00r00               200 	.dw _g_fonts_small_03
   00EEr00r00               201 	.dw _g_fonts_small_04
   00F0r00r00               202 	.dw _g_fonts_small_05
   00F2r00r00               203 	.dw _g_fonts_small_06
   00F4r00r00               204 	.dw _g_fonts_small_07
   00F6r00r00               205 	.dw _g_fonts_small_08
   00F8r00r00               206 	.dw _g_fonts_small_09
   00FAr00r00               207 	.dw _g_fonts_small_10
   00FCr00r00               208 	.dw _g_fonts_small_11
   00FEr00r00               209 	.dw _g_fonts_small_12
   0100r00r00               210 	.dw _g_fonts_small_13
   0102r00r00               211 	.dw _g_fonts_small_14
   0104r00r00               212 	.dw _g_fonts_small_15
   0106r00r00               213 	.dw _g_fonts_small_16
   0108r00r00               214 	.dw _g_fonts_small_17
   010Ar00r00               215 	.dw _g_fonts_small_18
   010Cr00r00               216 	.dw _g_fonts_small_19
   010Er00r00               217 	.dw _g_fonts_small_20
   0110r00r00               218 	.dw _g_fonts_small_21
   0112r00r00               219 	.dw _g_fonts_small_22
   0114r00r00               220 	.dw _g_fonts_small_23
   0116r00r00               221 	.dw _g_fonts_small_24
   0118r00r00               222 	.dw _g_fonts_small_25
   011Ar00r00               223 	.dw _g_fonts_small_26
   011Cr00r00               224 	.dw _g_fonts_small_27
   011Er00r00               225 	.dw _g_fonts_small_28
   0120                     226 _numbers:
   0120r00r00               227 	.dw _g_numbers_small_00
   0122r00r00               228 	.dw _g_numbers_small_01
   0124r00r00               229 	.dw _g_numbers_small_02
   0126r00r00               230 	.dw _g_numbers_small_03
   0128r00r00               231 	.dw _g_numbers_small_04
   012Ar00r00               232 	.dw _g_numbers_small_05
   012Cr00r00               233 	.dw _g_numbers_small_06
   012Er00r00               234 	.dw _g_numbers_small_07
   0130r00r00               235 	.dw _g_numbers_small_08
   0132r00r00               236 	.dw _g_numbers_small_09
   0134r00r00               237 	.dw _g_numbers_small_10
   0136r00r00               238 	.dw _g_numbers_small_11
   0138r00r00               239 	.dw _g_numbers_small_12
   013Ar00r00               240 	.dw _g_numbers_small_13
   013Cr00r00               241 	.dw _g_numbers_small_14
   013E                     242 _swapColors:
   013E 7F                  243 	.db #0x7f	; 127
   013F FF                  244 	.db #0xff	; 255
   0140 AA                  245 	.db #0xaa	; 170
   0141 55                  246 	.db #0x55	; 85	'U'
   0142 3E                  247 	.db #0x3e	; 62
   0143 3C                  248 	.db #0x3c	; 60
   0144 28                  249 	.db #0x28	; 40
   0145 14                  250 	.db #0x14	; 20
   0146 7A                  251 	.db #0x7a	; 122	'z'
   0147 F0                  252 	.db #0xf0	; 240
   0148 A0                  253 	.db #0xa0	; 160
   0149 50                  254 	.db #0x50	; 80	'P'
   014A 3B                  255 	.db #0x3b	; 59
   014B 33                  256 	.db #0x33	; 51	'3'
   014C 22                  257 	.db #0x22	; 34
   014D 11                  258 	.db #0x11	; 17
   014E 3A                  259 	.db #0x3a	; 58
   014F 30                  260 	.db #0x30	; 48	'0'
   0150 20                  261 	.db #0x20	; 32
   0151 10                  262 	.db #0x10	; 16
   0152 7B                  263 	.db #0x7b	; 123
   0153 F3                  264 	.db #0xf3	; 243
   0154 A2                  265 	.db #0xa2	; 162
   0155 51                  266 	.db #0x51	; 81	'Q'
   0156                     267 ___str_0:
   0156 7A 79 78 77 76 75   268 	.ascii "zyxwvutsrqponmlkjihgfedcba9876543210123456789abcdefghijklmno"
        74 73 72 71 70 6F
        6E 6D 6C 6B 6A 69
        68 67 66 65 64 63
        62 61 39 38 37 36
        35 34 33 32 31 30
        31 32 33 34 35 36
        37 38 39 61 62 63
        64 65 66 67 68 69
        6A 6B 6C 6D 6E 6F
   0192 70 71 72 73 74 75   269 	.ascii "pqrstuvwxyz"
        76 77 78 79 7A
   019D 00                  270 	.db 0x00
                            271 ;src/text/text.c:97: u8 strLength(u8 str[]) {
                            272 ;	---------------------------------
                            273 ; Function strLength
                            274 ; ---------------------------------
   019E                     275 _strLength::
                            276 ;src/text/text.c:101: while (str[result] != '\0') {
   019E 0E 00         [ 7]  277 	ld	c, #0x00
   01A0                     278 00101$:
   01A0 21 02 00      [10]  279 	ld	hl, #2
   01A3 39            [11]  280 	add	hl, sp
   01A4 7E            [ 7]  281 	ld	a, (hl)
   01A5 23            [ 6]  282 	inc	hl
   01A6 66            [ 7]  283 	ld	h, (hl)
   01A7 6F            [ 4]  284 	ld	l, a
   01A8 06 00         [ 7]  285 	ld	b, #0x00
   01AA 09            [11]  286 	add	hl, bc
   01AB 7E            [ 7]  287 	ld	a, (hl)
   01AC B7            [ 4]  288 	or	a, a
   01AD 28 03         [12]  289 	jr	Z,00103$
                            290 ;src/text/text.c:102: result++;
   01AF 0C            [ 4]  291 	inc	c
   01B0 18 EE         [12]  292 	jr	00101$
   01B2                     293 00103$:
                            294 ;src/text/text.c:104: return result;
   01B2 69            [ 4]  295 	ld	l, c
   01B3 C9            [10]  296 	ret
                            297 ;src/text/text.c:118: void strCopy(u8 *str1, u8 *str2){
                            298 ;	---------------------------------
                            299 ; Function strCopy
                            300 ; ---------------------------------
   01B4                     301 _strCopy::
                            302 ;src/text/text.c:120: while (str1[i] != '\0'){
   01B4 0E 00         [ 7]  303 	ld	c, #0x00
   01B6                     304 00101$:
   01B6 21 02 00      [10]  305 	ld	hl, #2
   01B9 39            [11]  306 	add	hl, sp
   01BA 7E            [ 7]  307 	ld	a, (hl)
   01BB 23            [ 6]  308 	inc	hl
   01BC 66            [ 7]  309 	ld	h, (hl)
   01BD 6F            [ 4]  310 	ld	l, a
   01BE 06 00         [ 7]  311 	ld	b, #0x00
   01C0 09            [11]  312 	add	hl, bc
   01C1 46            [ 7]  313 	ld	b, (hl)
   01C2 78            [ 4]  314 	ld	a, b
   01C3 B7            [ 4]  315 	or	a, a
   01C4 C8            [11]  316 	ret	Z
                            317 ;src/text/text.c:121: str2[i] = str1[i];
   01C5 FD 21 04 00   [14]  318 	ld	iy, #4
   01C9 FD 39         [15]  319 	add	iy, sp
   01CB FD 7E 00      [19]  320 	ld	a, 0 (iy)
   01CE 81            [ 4]  321 	add	a, c
   01CF 5F            [ 4]  322 	ld	e, a
   01D0 FD 7E 01      [19]  323 	ld	a, 1 (iy)
   01D3 CE 00         [ 7]  324 	adc	a, #0x00
   01D5 57            [ 4]  325 	ld	d, a
   01D6 78            [ 4]  326 	ld	a, b
   01D7 12            [ 7]  327 	ld	(de), a
                            328 ;src/text/text.c:122: i++;
   01D8 0C            [ 4]  329 	inc	c
   01D9 18 DB         [12]  330 	jr	00101$
                            331 ;src/text/text.c:135: void drawNumber(i32 aNumber, u8 length, u8 xPos, u8 yPos, u8 delay) {
                            332 ;	---------------------------------
                            333 ; Function drawNumber
                            334 ; ---------------------------------
   01DB                     335 _drawNumber::
   01DB DD E5         [15]  336 	push	ix
   01DD DD 21 00 00   [14]  337 	ld	ix,#0
   01E1 DD 39         [15]  338 	add	ix,sp
   01E3 21 F8 FF      [10]  339 	ld	hl, #-8
   01E6 39            [11]  340 	add	hl, sp
                            341 ;src/text/text.c:145: itoa(aNumber, str, 10);
   01E7 F9            [ 6]  342 	ld	sp, hl
   01E8 23            [ 6]  343 	inc	hl
   01E9 23            [ 6]  344 	inc	hl
   01EA 4D            [ 4]  345 	ld	c,l
   01EB 44            [ 4]  346 	ld	b,h
   01EC DD 5E 04      [19]  347 	ld	e, 4 (ix)
   01EF DD 56 05      [19]  348 	ld	d, 5 (ix)
   01F2 D5            [11]  349 	push	de
   01F3 FD E1         [14]  350 	pop	iy
   01F5 C5            [11]  351 	push	bc
   01F6 11 0A 00      [10]  352 	ld	de, #0x000a
   01F9 D5            [11]  353 	push	de
   01FA E5            [11]  354 	push	hl
   01FB FD E5         [15]  355 	push	iy
   01FD CDr00r00      [17]  356 	call	_itoa
   0200 21 06 00      [10]  357 	ld	hl, #6
   0203 39            [11]  358 	add	hl, sp
   0204 F9            [ 6]  359 	ld	sp, hl
   0205 C1            [10]  360 	pop	bc
                            361 ;src/text/text.c:147: zeros = length - strLength(str);
   0206 59            [ 4]  362 	ld	e, c
   0207 50            [ 4]  363 	ld	d, b
   0208 C5            [11]  364 	push	bc
   0209 D5            [11]  365 	push	de
   020A CDr9Er01      [17]  366 	call	_strLength
   020D F1            [10]  367 	pop	af
   020E C1            [10]  368 	pop	bc
   020F DD 7E 08      [19]  369 	ld	a, 8 (ix)
   0212 95            [ 4]  370 	sub	a, l
   0213 DD 77 F9      [19]  371 	ld	-7 (ix), a
                            372 ;src/text/text.c:149: number = str[x];
   0216 0A            [ 7]  373 	ld	a, (bc)
   0217 5F            [ 4]  374 	ld	e, a
                            375 ;src/text/text.c:151: while (number != '\0') {
   0218 DD 36 F8 00   [19]  376 	ld	-8 (ix), #0x00
   021C                     377 00103$:
   021C 7B            [ 4]  378 	ld	a, e
   021D B7            [ 4]  379 	or	a, a
   021E 28 5A         [12]  380 	jr	Z,00106$
                            381 ;src/text/text.c:153: pvideo = cpct_getScreenPtr(CPCT_VMEM_START, (zeros + x) * FONT_W + xPos, yPos);
   0220 DD 7E F9      [19]  382 	ld	a, -7 (ix)
   0223 DD 86 F8      [19]  383 	add	a, -8 (ix)
   0226 87            [ 4]  384 	add	a, a
   0227 DD 86 09      [19]  385 	add	a, 9 (ix)
   022A 57            [ 4]  386 	ld	d, a
   022B C5            [11]  387 	push	bc
   022C D5            [11]  388 	push	de
   022D DD 7E 0A      [19]  389 	ld	a, 10 (ix)
   0230 F5            [11]  390 	push	af
   0231 33            [ 6]  391 	inc	sp
   0232 D5            [11]  392 	push	de
   0233 33            [ 6]  393 	inc	sp
   0234 21 00 C0      [10]  394 	ld	hl, #0xc000
   0237 E5            [11]  395 	push	hl
   0238 CDr00r00      [17]  396 	call	_cpct_getScreenPtr
   023B D1            [10]  397 	pop	de
   023C C1            [10]  398 	pop	bc
                            399 ;src/text/text.c:154: cpct_drawSpriteMaskedAlignedTable(numbers[number - 44], pvideo, FONT_W, FONT_H, g_tablatrans);
   023D E5            [11]  400 	push	hl
   023E FD E1         [14]  401 	pop	iy
   0240 7B            [ 4]  402 	ld	a, e
   0241 C6 D4         [ 7]  403 	add	a, #0xd4
   0243 6F            [ 4]  404 	ld	l, a
   0244 26 00         [ 7]  405 	ld	h, #0x00
   0246 29            [11]  406 	add	hl, hl
   0247 11r20r01      [10]  407 	ld	de, #_numbers
   024A 19            [11]  408 	add	hl, de
   024B 5E            [ 7]  409 	ld	e, (hl)
   024C 23            [ 6]  410 	inc	hl
   024D 56            [ 7]  411 	ld	d, (hl)
   024E C5            [11]  412 	push	bc
   024F 21r00r00      [10]  413 	ld	hl, #_g_tablatrans
   0252 E5            [11]  414 	push	hl
   0253 21 02 05      [10]  415 	ld	hl, #0x0502
   0256 E5            [11]  416 	push	hl
   0257 FD E5         [15]  417 	push	iy
   0259 D5            [11]  418 	push	de
   025A CDr00r00      [17]  419 	call	_cpct_drawSpriteMaskedAlignedTable
   025D C1            [10]  420 	pop	bc
                            421 ;src/text/text.c:155: number = str[++x];
   025E DD 34 F8      [23]  422 	inc	-8 (ix)
   0261 DD 6E F8      [19]  423 	ld	l,-8 (ix)
   0264 26 00         [ 7]  424 	ld	h,#0x00
   0266 09            [11]  425 	add	hl, bc
   0267 5E            [ 7]  426 	ld	e, (hl)
                            427 ;src/text/text.c:158: if (delay){
   0268 DD 7E 0B      [19]  428 	ld	a, 11 (ix)
   026B B7            [ 4]  429 	or	a, a
   026C 28 AE         [12]  430 	jr	Z,00103$
                            431 ;src/text/text.c:159: cpct_waitVSYNC ();
   026E C5            [11]  432 	push	bc
   026F D5            [11]  433 	push	de
   0270 CDr00r00      [17]  434 	call	_cpct_waitVSYNC
   0273 CDr00r00      [17]  435 	call	_cpct_waitVSYNC
   0276 D1            [10]  436 	pop	de
   0277 C1            [10]  437 	pop	bc
   0278 18 A2         [12]  438 	jr	00103$
   027A                     439 00106$:
   027A DD F9         [10]  440 	ld	sp, ix
   027C DD E1         [14]  441 	pop	ix
   027E C9            [10]  442 	ret
                            443 ;src/text/text.c:176: void drawText(u8 text[], u8 xPos, u8 yPos, u8 centered, u8 delay) {
                            444 ;	---------------------------------
                            445 ; Function drawText
                            446 ; ---------------------------------
   027F                     447 _drawText::
   027F DD E5         [15]  448 	push	ix
   0281 DD 21 00 00   [14]  449 	ld	ix,#0
   0285 DD 39         [15]  450 	add	ix,sp
   0287 3B            [ 6]  451 	dec	sp
                            452 ;src/text/text.c:182: if (centered) {
   0288 DD 7E 08      [19]  453 	ld	a, 8 (ix)
   028B B7            [ 4]  454 	or	a, a
   028C 28 15         [12]  455 	jr	Z,00102$
                            456 ;src/text/text.c:183: x = strLength(text);
   028E DD 6E 04      [19]  457 	ld	l,4 (ix)
   0291 DD 66 05      [19]  458 	ld	h,5 (ix)
   0294 E5            [11]  459 	push	hl
   0295 CDr9Er01      [17]  460 	call	_strLength
   0298 F1            [10]  461 	pop	af
                            462 ;src/text/text.c:184: xPos = 39 - (x / 2) * FONT_W;
   0299 CB 3D         [ 8]  463 	srl	l
   029B CB 25         [ 8]  464 	sla	l
   029D 3E 27         [ 7]  465 	ld	a, #0x27
   029F 95            [ 4]  466 	sub	a, l
   02A0 DD 77 06      [19]  467 	ld	6 (ix), a
   02A3                     468 00102$:
                            469 ;src/text/text.c:190: character = text[x];
   02A3 DD 4E 04      [19]  470 	ld	c,4 (ix)
   02A6 DD 46 05      [19]  471 	ld	b,5 (ix)
   02A9 0A            [ 7]  472 	ld	a, (bc)
   02AA 5F            [ 4]  473 	ld	e, a
                            474 ;src/text/text.c:192: while (character != '\0') {
   02AB DD 36 FF 00   [19]  475 	ld	-1 (ix), #0x00
   02AF                     476 00111$:
   02AF 7B            [ 4]  477 	ld	a, e
   02B0 B7            [ 4]  478 	or	a, a
   02B1 CAr3Br03      [10]  479 	jp	Z, 00114$
                            480 ;src/text/text.c:194: pvideo = cpct_getScreenPtr(CPCT_VMEM_START, (x * FONT_W) + xPos, yPos);
   02B4 DD 7E FF      [19]  481 	ld	a, -1 (ix)
   02B7 87            [ 4]  482 	add	a, a
   02B8 DD 86 06      [19]  483 	add	a, 6 (ix)
   02BB 57            [ 4]  484 	ld	d, a
   02BC C5            [11]  485 	push	bc
   02BD D5            [11]  486 	push	de
   02BE DD 7E 07      [19]  487 	ld	a, 7 (ix)
   02C1 F5            [11]  488 	push	af
   02C2 33            [ 6]  489 	inc	sp
   02C3 D5            [11]  490 	push	de
   02C4 33            [ 6]  491 	inc	sp
   02C5 21 00 C0      [10]  492 	ld	hl, #0xc000
   02C8 E5            [11]  493 	push	hl
   02C9 CDr00r00      [17]  494 	call	_cpct_getScreenPtr
   02CC D1            [10]  495 	pop	de
   02CD C1            [10]  496 	pop	bc
                            497 ;src/text/text.c:199: cpct_drawSpriteMaskedAlignedTable(numbers[character - 44], pvideo, FONT_W, FONT_H, g_tablatrans);
   02CE E5            [11]  498 	push	hl
   02CF FD E1         [14]  499 	pop	iy
                            500 ;src/text/text.c:197: if (character >= 44 && character <= 58) {
   02D1 7B            [ 4]  501 	ld	a, e
   02D2 D6 2C         [ 7]  502 	sub	a, #0x2c
   02D4 38 25         [12]  503 	jr	C,00106$
   02D6 3E 3A         [ 7]  504 	ld	a, #0x3a
   02D8 93            [ 4]  505 	sub	a, e
   02D9 38 20         [12]  506 	jr	C,00106$
                            507 ;src/text/text.c:199: cpct_drawSpriteMaskedAlignedTable(numbers[character - 44], pvideo, FONT_W, FONT_H, g_tablatrans);
   02DB 7B            [ 4]  508 	ld	a, e
   02DC C6 D4         [ 7]  509 	add	a, #0xd4
   02DE 6F            [ 4]  510 	ld	l, a
   02DF 26 00         [ 7]  511 	ld	h, #0x00
   02E1 29            [11]  512 	add	hl, hl
   02E2 11r20r01      [10]  513 	ld	de, #_numbers
   02E5 19            [11]  514 	add	hl, de
   02E6 5E            [ 7]  515 	ld	e, (hl)
   02E7 23            [ 6]  516 	inc	hl
   02E8 56            [ 7]  517 	ld	d, (hl)
   02E9 C5            [11]  518 	push	bc
   02EA 21r00r00      [10]  519 	ld	hl, #_g_tablatrans
   02ED E5            [11]  520 	push	hl
   02EE 21 02 05      [10]  521 	ld	hl, #0x0502
   02F1 E5            [11]  522 	push	hl
   02F2 FD E5         [15]  523 	push	iy
   02F4 D5            [11]  524 	push	de
   02F5 CDr00r00      [17]  525 	call	_cpct_drawSpriteMaskedAlignedTable
   02F8 C1            [10]  526 	pop	bc
   02F9 18 22         [12]  527 	jr	00107$
   02FB                     528 00106$:
                            529 ;src/text/text.c:202: else if (character != 32) { //32 = SPACE
                            530 ;src/text/text.c:204: cpct_drawSpriteMaskedAlignedTable(font[character - 63], pvideo, FONT_W, FONT_H, g_tablatrans);
   02FB 7B            [ 4]  531 	ld	a,e
   02FC FE 20         [ 7]  532 	cp	a,#0x20
   02FE 28 1D         [12]  533 	jr	Z,00107$
   0300 C6 C1         [ 7]  534 	add	a, #0xc1
   0302 6F            [ 4]  535 	ld	l, a
   0303 26 00         [ 7]  536 	ld	h, #0x00
   0305 29            [11]  537 	add	hl, hl
   0306 11rE6r00      [10]  538 	ld	de, #_font
   0309 19            [11]  539 	add	hl, de
   030A 5E            [ 7]  540 	ld	e, (hl)
   030B 23            [ 6]  541 	inc	hl
   030C 56            [ 7]  542 	ld	d, (hl)
   030D C5            [11]  543 	push	bc
   030E 21r00r00      [10]  544 	ld	hl, #_g_tablatrans
   0311 E5            [11]  545 	push	hl
   0312 21 02 05      [10]  546 	ld	hl, #0x0502
   0315 E5            [11]  547 	push	hl
   0316 FD E5         [15]  548 	push	iy
   0318 D5            [11]  549 	push	de
   0319 CDr00r00      [17]  550 	call	_cpct_drawSpriteMaskedAlignedTable
   031C C1            [10]  551 	pop	bc
   031D                     552 00107$:
                            553 ;src/text/text.c:207: character = text[++x];
   031D DD 34 FF      [23]  554 	inc	-1 (ix)
   0320 DD 6E FF      [19]  555 	ld	l,-1 (ix)
   0323 26 00         [ 7]  556 	ld	h,#0x00
   0325 09            [11]  557 	add	hl, bc
   0326 5E            [ 7]  558 	ld	e, (hl)
                            559 ;src/text/text.c:210: if (delay){
   0327 DD 7E 09      [19]  560 	ld	a, 9 (ix)
   032A B7            [ 4]  561 	or	a, a
   032B CArAFr02      [10]  562 	jp	Z, 00111$
                            563 ;src/text/text.c:211: cpct_waitVSYNC ();
   032E C5            [11]  564 	push	bc
   032F D5            [11]  565 	push	de
   0330 CDr00r00      [17]  566 	call	_cpct_waitVSYNC
   0333 CDr00r00      [17]  567 	call	_cpct_waitVSYNC
   0336 D1            [10]  568 	pop	de
   0337 C1            [10]  569 	pop	bc
   0338 C3rAFr02      [10]  570 	jp	00111$
   033B                     571 00114$:
   033B 33            [ 6]  572 	inc	sp
   033C DD E1         [14]  573 	pop	ix
   033E C9            [10]  574 	ret
                            575 ;src/text/text.c:221: void drawText2(const u8 text[], u8 xPos, u8 yPos, u8 color, u8 size, u8 transparent) {
                            576 ;	---------------------------------
                            577 ; Function drawText2
                            578 ; ---------------------------------
   033F                     579 _drawText2::
   033F DD E5         [15]  580 	push	ix
   0341 DD 21 00 00   [14]  581 	ld	ix,#0
   0345 DD 39         [15]  582 	add	ix,sp
   0347 21 AD FF      [10]  583 	ld	hl, #-83
   034A 39            [11]  584 	add	hl, sp
   034B F9            [ 6]  585 	ld	sp, hl
                            586 ;src/text/text.c:232: color1 = swapColors[color][0];
   034C 01r3Er01      [10]  587 	ld	bc, #_swapColors+0
   034F DD 6E 08      [19]  588 	ld	l, 8 (ix)
   0352 26 00         [ 7]  589 	ld	h, #0x00
   0354 29            [11]  590 	add	hl, hl
   0355 29            [11]  591 	add	hl, hl
   0356 09            [11]  592 	add	hl, bc
   0357 E5            [11]  593 	push	hl
   0358 FD E1         [14]  594 	pop	iy
   035A FD 7E 00      [19]  595 	ld	a, 0 (iy)
   035D DD 77 D6      [19]  596 	ld	-42 (ix), a
                            597 ;src/text/text.c:233: color2 = swapColors[color][1];
   0360 FD E5         [15]  598 	push	iy
   0362 E1            [10]  599 	pop	hl
   0363 23            [ 6]  600 	inc	hl
   0364 7E            [ 7]  601 	ld	a, (hl)
   0365 DD 77 D5      [19]  602 	ld	-43 (ix), a
                            603 ;src/text/text.c:234: color3 = swapColors[color][2];
   0368 FD E5         [15]  604 	push	iy
   036A E1            [10]  605 	pop	hl
   036B 23            [ 6]  606 	inc	hl
   036C 23            [ 6]  607 	inc	hl
   036D 7E            [ 7]  608 	ld	a, (hl)
   036E DD 77 D4      [19]  609 	ld	-44 (ix), a
                            610 ;src/text/text.c:235: color4 = swapColors[color][3];
   0371 FD 7E 03      [19]  611 	ld	a, 3 (iy)
   0374 DD 77 D1      [19]  612 	ld	-47 (ix), a
                            613 ;src/text/text.c:241: character = text[x];
   0377 DD 7E 04      [19]  614 	ld	a, 4 (ix)
   037A DD 77 E7      [19]  615 	ld	-25 (ix), a
   037D DD 7E 05      [19]  616 	ld	a, 5 (ix)
   0380 DD 77 E8      [19]  617 	ld	-24 (ix), a
   0383 DD 6E E7      [19]  618 	ld	l,-25 (ix)
   0386 DD 66 E8      [19]  619 	ld	h,-24 (ix)
   0389 7E            [ 7]  620 	ld	a, (hl)
   038A DD 77 D9      [19]  621 	ld	-39 (ix), a
                            622 ;src/text/text.c:243: while (character != '\0') {
   038D 21 00 00      [10]  623 	ld	hl, #0x0000
   0390 39            [11]  624 	add	hl, sp
   0391 DD 75 FB      [19]  625 	ld	-5 (ix), l
   0394 DD 74 FC      [19]  626 	ld	-4 (ix), h
   0397 DD 7E FB      [19]  627 	ld	a, -5 (ix)
   039A DD 77 DE      [19]  628 	ld	-34 (ix), a
   039D DD 7E FC      [19]  629 	ld	a, -4 (ix)
   03A0 DD 77 DF      [19]  630 	ld	-33 (ix), a
   03A3 DD 7E FB      [19]  631 	ld	a, -5 (ix)
   03A6 DD 77 E3      [19]  632 	ld	-29 (ix), a
   03A9 DD 7E FC      [19]  633 	ld	a, -4 (ix)
   03AC DD 77 E4      [19]  634 	ld	-28 (ix), a
   03AF DD 7E FB      [19]  635 	ld	a, -5 (ix)
   03B2 DD 77 E5      [19]  636 	ld	-27 (ix), a
   03B5 DD 7E FC      [19]  637 	ld	a, -4 (ix)
   03B8 DD 77 E6      [19]  638 	ld	-26 (ix), a
   03BB DD 7E FB      [19]  639 	ld	a, -5 (ix)
   03BE DD 77 FD      [19]  640 	ld	-3 (ix), a
   03C1 DD 7E FC      [19]  641 	ld	a, -4 (ix)
   03C4 DD 77 FE      [19]  642 	ld	-2 (ix), a
   03C7 DD 7E FB      [19]  643 	ld	a, -5 (ix)
   03CA DD 77 F1      [19]  644 	ld	-15 (ix), a
   03CD DD 7E FC      [19]  645 	ld	a, -4 (ix)
   03D0 DD 77 F2      [19]  646 	ld	-14 (ix), a
   03D3 DD 7E FB      [19]  647 	ld	a, -5 (ix)
   03D6 DD 77 EC      [19]  648 	ld	-20 (ix), a
   03D9 DD 7E FC      [19]  649 	ld	a, -4 (ix)
   03DC DD 77 ED      [19]  650 	ld	-19 (ix), a
   03DF DD 7E FB      [19]  651 	ld	a, -5 (ix)
   03E2 DD 77 EE      [19]  652 	ld	-18 (ix), a
   03E5 DD 7E FC      [19]  653 	ld	a, -4 (ix)
   03E8 DD 77 EF      [19]  654 	ld	-17 (ix), a
   03EB DD 7E FB      [19]  655 	ld	a, -5 (ix)
   03EE DD 77 F4      [19]  656 	ld	-12 (ix), a
   03F1 DD 7E FC      [19]  657 	ld	a, -4 (ix)
   03F4 DD 77 F5      [19]  658 	ld	-11 (ix), a
   03F7 DD 7E FB      [19]  659 	ld	a, -5 (ix)
   03FA DD 77 DA      [19]  660 	ld	-38 (ix), a
   03FD DD 7E FC      [19]  661 	ld	a, -4 (ix)
   0400 DD 77 DB      [19]  662 	ld	-37 (ix), a
   0403 DD 7E 09      [19]  663 	ld	a, 9 (ix)
   0406 3D            [ 4]  664 	dec	a
   0407 20 04         [12]  665 	jr	NZ,00261$
   0409 3E 01         [ 7]  666 	ld	a,#0x01
   040B 18 01         [12]  667 	jr	00262$
   040D                     668 00261$:
   040D AF            [ 4]  669 	xor	a,a
   040E                     670 00262$:
   040E DD 77 EB      [19]  671 	ld	-21 (ix), a
   0411 DD 7E 09      [19]  672 	ld	a, 9 (ix)
   0414 4F            [ 4]  673 	ld	c, a
   0415 87            [ 4]  674 	add	a, a
   0416 87            [ 4]  675 	add	a, a
   0417 87            [ 4]  676 	add	a, a
   0418 81            [ 4]  677 	add	a, c
   0419 DD 77 FA      [19]  678 	ld	-6 (ix), a
   041C DD 7E FB      [19]  679 	ld	a, -5 (ix)
   041F DD 77 E1      [19]  680 	ld	-31 (ix), a
   0422 DD 7E FC      [19]  681 	ld	a, -4 (ix)
   0425 DD 77 E2      [19]  682 	ld	-30 (ix), a
   0428 DD 7E FA      [19]  683 	ld	a, -6 (ix)
   042B DD 77 FF      [19]  684 	ld	-1 (ix), a
   042E DD 7E FB      [19]  685 	ld	a, -5 (ix)
   0431 DD 77 DC      [19]  686 	ld	-36 (ix), a
   0434 DD 7E FC      [19]  687 	ld	a, -4 (ix)
   0437 DD 77 DD      [19]  688 	ld	-35 (ix), a
   043A DD 36 D7 00   [19]  689 	ld	-41 (ix), #0x00
   043E                     690 00148$:
   043E DD 7E D9      [19]  691 	ld	a, -39 (ix)
   0441 B7            [ 4]  692 	or	a, a
   0442 CAr06r07      [10]  693 	jp	Z, 00153$
                            694 ;src/text/text.c:246: if (character != 32) { //32 = SPACE
   0445 DD 7E D9      [19]  695 	ld	a, -39 (ix)
   0448 D6 20         [ 7]  696 	sub	a, #0x20
   044A CArE9r06      [10]  697 	jp	Z,00147$
                            698 ;src/text/text.c:250: switch(character){
   044D DD 7E D9      [19]  699 	ld	a, -39 (ix)
   0450 D6 21         [ 7]  700 	sub	a, #0x21
   0452 28 4C         [12]  701 	jr	Z,00104$
   0454 DD 7E D9      [19]  702 	ld	a, -39 (ix)
   0457 D6 22         [ 7]  703 	sub	a, #0x22
   0459 28 3F         [12]  704 	jr	Z,00103$
   045B DD 7E D9      [19]  705 	ld	a, -39 (ix)
   045E D6 26         [ 7]  706 	sub	a, #0x26
   0460 28 56         [12]  707 	jr	Z,00108$
   0462 DD 7E D9      [19]  708 	ld	a, -39 (ix)
   0465 D6 27         [ 7]  709 	sub	a, #0x27
   0467 28 55         [12]  710 	jr	Z,00109$
   0469 DD 7E D9      [19]  711 	ld	a, -39 (ix)
   046C D6 28         [ 7]  712 	sub	a, #0x28
   046E 28 36         [12]  713 	jr	Z,00105$
   0470 DD 7E D9      [19]  714 	ld	a, -39 (ix)
   0473 D6 29         [ 7]  715 	sub	a, #0x29
   0475 28 35         [12]  716 	jr	Z,00106$
   0477 DD 7E D9      [19]  717 	ld	a, -39 (ix)
   047A D6 2C         [ 7]  718 	sub	a, #0x2c
   047C 28 16         [12]  719 	jr	Z,00102$
   047E DD 7E D9      [19]  720 	ld	a, -39 (ix)
   0481 D6 2E         [ 7]  721 	sub	a, #0x2e
   0483 28 09         [12]  722 	jr	Z,00101$
   0485 DD 7E D9      [19]  723 	ld	a, -39 (ix)
   0488 D6 2F         [ 7]  724 	sub	a, #0x2f
   048A 28 26         [12]  725 	jr	Z,00107$
   048C 18 34         [12]  726 	jr	00110$
                            727 ;src/text/text.c:252: case 46:
   048E                     728 00101$:
                            729 ;src/text/text.c:253: character=60;
   048E DD 36 D9 3C   [19]  730 	ld	-39 (ix), #0x3c
                            731 ;src/text/text.c:254: break;
   0492 18 2E         [12]  732 	jr	00110$
                            733 ;src/text/text.c:257: case 44:
   0494                     734 00102$:
                            735 ;src/text/text.c:258: character=61;
   0494 DD 36 D9 3D   [19]  736 	ld	-39 (ix), #0x3d
                            737 ;src/text/text.c:259: break;
   0498 18 28         [12]  738 	jr	00110$
                            739 ;src/text/text.c:262: case 34:
   049A                     740 00103$:
                            741 ;src/text/text.c:263: character=62;
   049A DD 36 D9 3E   [19]  742 	ld	-39 (ix), #0x3e
                            743 ;src/text/text.c:264: break;
   049E 18 22         [12]  744 	jr	00110$
                            745 ;src/text/text.c:267: case 33:
   04A0                     746 00104$:
                            747 ;src/text/text.c:268: character=64;
   04A0 DD 36 D9 40   [19]  748 	ld	-39 (ix), #0x40
                            749 ;src/text/text.c:269: break;
   04A4 18 1C         [12]  750 	jr	00110$
                            751 ;src/text/text.c:272: case 40:
   04A6                     752 00105$:
                            753 ;src/text/text.c:273: character=91;
   04A6 DD 36 D9 5B   [19]  754 	ld	-39 (ix), #0x5b
                            755 ;src/text/text.c:274: break;
   04AA 18 16         [12]  756 	jr	00110$
                            757 ;src/text/text.c:277: case 41:
   04AC                     758 00106$:
                            759 ;src/text/text.c:278: character=93;
   04AC DD 36 D9 5D   [19]  760 	ld	-39 (ix), #0x5d
                            761 ;src/text/text.c:279: break;
   04B0 18 10         [12]  762 	jr	00110$
                            763 ;src/text/text.c:282: case 47:
   04B2                     764 00107$:
                            765 ;src/text/text.c:283: character=92;
   04B2 DD 36 D9 5C   [19]  766 	ld	-39 (ix), #0x5c
                            767 ;src/text/text.c:284: break;
   04B6 18 0A         [12]  768 	jr	00110$
                            769 ;src/text/text.c:286: case 38:
   04B8                     770 00108$:
                            771 ;src/text/text.c:287: character=94;
   04B8 DD 36 D9 5E   [19]  772 	ld	-39 (ix), #0x5e
                            773 ;src/text/text.c:288: break;
   04BC 18 04         [12]  774 	jr	00110$
                            775 ;src/text/text.c:290: case 39:
   04BE                     776 00109$:
                            777 ;src/text/text.c:291: character=96;
   04BE DD 36 D9 60   [19]  778 	ld	-39 (ix), #0x60
                            779 ;src/text/text.c:293: }
   04C2                     780 00110$:
                            781 ;src/text/text.c:296: character-=48;
   04C2 DD 7E D9      [19]  782 	ld	a, -39 (ix)
   04C5 C6 D0         [ 7]  783 	add	a, #0xd0
                            784 ;src/text/text.c:299: for(i=0;i<18;i++){
   04C7 DD 77 D8      [19]  785 	ld	-40 (ix), a
   04CA 4F            [ 4]  786 	ld	c, a
   04CB 06 00         [ 7]  787 	ld	b,#0x00
   04CD 69            [ 4]  788 	ld	l, c
   04CE 60            [ 4]  789 	ld	h, b
   04CF 29            [11]  790 	add	hl, hl
   04D0 29            [11]  791 	add	hl, hl
   04D1 29            [11]  792 	add	hl, hl
   04D2 09            [11]  793 	add	hl, bc
   04D3 29            [11]  794 	add	hl, hl
   04D4 01r00r00      [10]  795 	ld	bc,#_g_font_chars
   04D7 09            [11]  796 	add	hl,bc
   04D8 4D            [ 4]  797 	ld	c, l
   04D9 44            [ 4]  798 	ld	b, h
   04DA 1E 00         [ 7]  799 	ld	e, #0x00
   04DC                     800 00151$:
                            801 ;src/text/text.c:300: pChar = g_font_chars + (character*18) + i;
   04DC 6B            [ 4]  802 	ld	l,e
   04DD 26 00         [ 7]  803 	ld	h,#0x00
   04DF 09            [11]  804 	add	hl, bc
                            805 ;src/text/text.c:304: if(*pChar == 0x7f) colorchar[i]=color1;
   04E0 DD 75 D2      [19]  806 	ld	-46 (ix), l
   04E3 DD 74 D3      [19]  807 	ld	-45 (ix), h
   04E6 7E            [ 7]  808 	ld	a, (hl)
   04E7 DD 77 F3      [19]  809 	ld	-13 (ix), a
   04EA D6 7F         [ 7]  810 	sub	a, #0x7f
   04EC 20 04         [12]  811 	jr	NZ,00273$
   04EE 3E 01         [ 7]  812 	ld	a,#0x01
   04F0 18 01         [12]  813 	jr	00274$
   04F2                     814 00273$:
   04F2 AF            [ 4]  815 	xor	a,a
   04F3                     816 00274$:
   04F3 DD 77 F0      [19]  817 	ld	-16 (ix), a
                            818 ;src/text/text.c:305: else if(*pChar == 0xff) colorchar[i]=color2;
   04F6 DD 7E F3      [19]  819 	ld	a, -13 (ix)
   04F9 3C            [ 4]  820 	inc	a
   04FA 20 04         [12]  821 	jr	NZ,00275$
   04FC 3E 01         [ 7]  822 	ld	a,#0x01
   04FE 18 01         [12]  823 	jr	00276$
   0500                     824 00275$:
   0500 AF            [ 4]  825 	xor	a,a
   0501                     826 00276$:
   0501 DD 77 E0      [19]  827 	ld	-32 (ix), a
                            828 ;src/text/text.c:306: else if(*pChar == 0xaa) colorchar[i]=color3;
   0504 DD 7E F3      [19]  829 	ld	a, -13 (ix)
   0507 D6 AA         [ 7]  830 	sub	a, #0xaa
   0509 20 04         [12]  831 	jr	NZ,00277$
   050B 3E 01         [ 7]  832 	ld	a,#0x01
   050D 18 01         [12]  833 	jr	00278$
   050F                     834 00277$:
   050F AF            [ 4]  835 	xor	a,a
   0510                     836 00278$:
   0510 DD 77 EA      [19]  837 	ld	-22 (ix), a
                            838 ;src/text/text.c:307: else if(*pChar == 0x55) colorchar[i]=color4;
   0513 DD 7E F3      [19]  839 	ld	a, -13 (ix)
   0516 D6 55         [ 7]  840 	sub	a, #0x55
   0518 20 04         [12]  841 	jr	NZ,00279$
   051A 3E 01         [ 7]  842 	ld	a,#0x01
   051C 18 01         [12]  843 	jr	00280$
   051E                     844 00279$:
   051E AF            [ 4]  845 	xor	a,a
   051F                     846 00280$:
   051F DD 77 E9      [19]  847 	ld	-23 (ix), a
                            848 ;src/text/text.c:302: if(size==1) {
   0522 DD 7E EB      [19]  849 	ld	a, -21 (ix)
   0525 B7            [ 4]  850 	or	a, a
   0526 28 68         [12]  851 	jr	Z,00136$
                            852 ;src/text/text.c:304: if(*pChar == 0x7f) colorchar[i]=color1;
   0528 DD 7E F0      [19]  853 	ld	a, -16 (ix)
   052B B7            [ 4]  854 	or	a, a
   052C 28 10         [12]  855 	jr	Z,00121$
   052E DD 6E DA      [19]  856 	ld	l,-38 (ix)
   0531 DD 66 DB      [19]  857 	ld	h,-37 (ix)
   0534 16 00         [ 7]  858 	ld	d, #0x00
   0536 19            [11]  859 	add	hl, de
   0537 DD 7E D6      [19]  860 	ld	a, -42 (ix)
   053A 77            [ 7]  861 	ld	(hl), a
   053B C3r70r06      [10]  862 	jp	00152$
   053E                     863 00121$:
                            864 ;src/text/text.c:305: else if(*pChar == 0xff) colorchar[i]=color2;
   053E DD 7E E0      [19]  865 	ld	a, -32 (ix)
   0541 B7            [ 4]  866 	or	a, a
   0542 28 10         [12]  867 	jr	Z,00118$
   0544 DD 6E F4      [19]  868 	ld	l,-12 (ix)
   0547 DD 66 F5      [19]  869 	ld	h,-11 (ix)
   054A 16 00         [ 7]  870 	ld	d, #0x00
   054C 19            [11]  871 	add	hl, de
   054D DD 7E D5      [19]  872 	ld	a, -43 (ix)
   0550 77            [ 7]  873 	ld	(hl), a
   0551 C3r70r06      [10]  874 	jp	00152$
   0554                     875 00118$:
                            876 ;src/text/text.c:306: else if(*pChar == 0xaa) colorchar[i]=color3;
   0554 DD 7E EA      [19]  877 	ld	a, -22 (ix)
   0557 B7            [ 4]  878 	or	a, a
   0558 28 10         [12]  879 	jr	Z,00115$
   055A DD 6E EE      [19]  880 	ld	l,-18 (ix)
   055D DD 66 EF      [19]  881 	ld	h,-17 (ix)
   0560 16 00         [ 7]  882 	ld	d, #0x00
   0562 19            [11]  883 	add	hl, de
   0563 DD 7E D4      [19]  884 	ld	a, -44 (ix)
   0566 77            [ 7]  885 	ld	(hl), a
   0567 C3r70r06      [10]  886 	jp	00152$
   056A                     887 00115$:
                            888 ;src/text/text.c:307: else if(*pChar == 0x55) colorchar[i]=color4;
   056A DD 7E E9      [19]  889 	ld	a, -23 (ix)
   056D B7            [ 4]  890 	or	a, a
   056E 28 10         [12]  891 	jr	Z,00112$
   0570 DD 6E EC      [19]  892 	ld	l,-20 (ix)
   0573 DD 66 ED      [19]  893 	ld	h,-19 (ix)
   0576 16 00         [ 7]  894 	ld	d, #0x00
   0578 19            [11]  895 	add	hl, de
   0579 DD 7E D1      [19]  896 	ld	a, -47 (ix)
   057C 77            [ 7]  897 	ld	(hl), a
   057D C3r70r06      [10]  898 	jp	00152$
   0580                     899 00112$:
                            900 ;src/text/text.c:308: else colorchar[i]=*pChar;
   0580 DD 6E F1      [19]  901 	ld	l,-15 (ix)
   0583 DD 66 F2      [19]  902 	ld	h,-14 (ix)
   0586 16 00         [ 7]  903 	ld	d, #0x00
   0588 19            [11]  904 	add	hl, de
   0589 DD 7E F3      [19]  905 	ld	a, -13 (ix)
   058C 77            [ 7]  906 	ld	(hl), a
   058D C3r70r06      [10]  907 	jp	00152$
   0590                     908 00136$:
                            909 ;src/text/text.c:313: pos=(i*size)-(i%FONT2_W);
   0590 D5            [11]  910 	push	de
   0591 C5            [11]  911 	push	bc
   0592 DD 66 09      [19]  912 	ld	h, 9 (ix)
   0595 2E 00         [ 7]  913 	ld	l, #0x00
   0597 55            [ 4]  914 	ld	d, l
   0598 06 08         [ 7]  915 	ld	b, #0x08
   059A                     916 00281$:
   059A 29            [11]  917 	add	hl, hl
   059B 30 01         [12]  918 	jr	NC,00282$
   059D 19            [11]  919 	add	hl, de
   059E                     920 00282$:
   059E 10 FA         [13]  921 	djnz	00281$
   05A0 C1            [10]  922 	pop	bc
   05A1 D1            [10]  923 	pop	de
   05A2 7B            [ 4]  924 	ld	a, e
   05A3 E6 01         [ 7]  925 	and	a, #0x01
   05A5 57            [ 4]  926 	ld	d, a
   05A6 7D            [ 4]  927 	ld	a, l
   05A7 92            [ 4]  928 	sub	a, d
   05A8 6F            [ 4]  929 	ld	l, a
                            930 ;src/text/text.c:317: colorchar[pos+FONT2_W]=color1;
   05A9 55            [ 4]  931 	ld	d, l
   05AA 14            [ 4]  932 	inc	d
   05AB 14            [ 4]  933 	inc	d
                            934 ;src/text/text.c:315: if(*pChar == 0x7f) {
   05AC DD 7E F0      [19]  935 	ld	a, -16 (ix)
   05AF B7            [ 4]  936 	or	a, a
   05B0 28 21         [12]  937 	jr	Z,00133$
                            938 ;src/text/text.c:316: colorchar[pos]=color1;
   05B2 DD 7E FD      [19]  939 	ld	a, -3 (ix)
   05B5 85            [ 4]  940 	add	a, l
   05B6 6F            [ 4]  941 	ld	l, a
   05B7 DD 7E FE      [19]  942 	ld	a, -2 (ix)
   05BA CE 00         [ 7]  943 	adc	a, #0x00
   05BC 67            [ 4]  944 	ld	h, a
   05BD DD 7E D6      [19]  945 	ld	a, -42 (ix)
   05C0 77            [ 7]  946 	ld	(hl), a
                            947 ;src/text/text.c:317: colorchar[pos+FONT2_W]=color1;
   05C1 DD 7E FD      [19]  948 	ld	a, -3 (ix)
   05C4 82            [ 4]  949 	add	a, d
   05C5 6F            [ 4]  950 	ld	l, a
   05C6 DD 7E FE      [19]  951 	ld	a, -2 (ix)
   05C9 CE 00         [ 7]  952 	adc	a, #0x00
   05CB 67            [ 4]  953 	ld	h, a
   05CC DD 7E D6      [19]  954 	ld	a, -42 (ix)
   05CF 77            [ 7]  955 	ld	(hl), a
   05D0 C3r70r06      [10]  956 	jp	00152$
   05D3                     957 00133$:
                            958 ;src/text/text.c:319: else if(*pChar == 0xff) {
   05D3 DD 7E E0      [19]  959 	ld	a, -32 (ix)
   05D6 B7            [ 4]  960 	or	a, a
   05D7 28 20         [12]  961 	jr	Z,00130$
                            962 ;src/text/text.c:320: colorchar[pos]=color2;
   05D9 DD 7E E5      [19]  963 	ld	a, -27 (ix)
   05DC 85            [ 4]  964 	add	a, l
   05DD 6F            [ 4]  965 	ld	l, a
   05DE DD 7E E6      [19]  966 	ld	a, -26 (ix)
   05E1 CE 00         [ 7]  967 	adc	a, #0x00
   05E3 67            [ 4]  968 	ld	h, a
   05E4 DD 7E D5      [19]  969 	ld	a, -43 (ix)
   05E7 77            [ 7]  970 	ld	(hl), a
                            971 ;src/text/text.c:321: colorchar[pos+FONT2_W]=color2;
   05E8 DD 7E E5      [19]  972 	ld	a, -27 (ix)
   05EB 82            [ 4]  973 	add	a, d
   05EC 6F            [ 4]  974 	ld	l, a
   05ED DD 7E E6      [19]  975 	ld	a, -26 (ix)
   05F0 CE 00         [ 7]  976 	adc	a, #0x00
   05F2 67            [ 4]  977 	ld	h, a
   05F3 DD 7E D5      [19]  978 	ld	a, -43 (ix)
   05F6 77            [ 7]  979 	ld	(hl), a
   05F7 18 77         [12]  980 	jr	00152$
   05F9                     981 00130$:
                            982 ;src/text/text.c:323: else if(*pChar == 0xaa) {
   05F9 DD 7E EA      [19]  983 	ld	a, -22 (ix)
   05FC B7            [ 4]  984 	or	a, a
   05FD 28 20         [12]  985 	jr	Z,00127$
                            986 ;src/text/text.c:324: colorchar[pos]=color3;
   05FF DD 7E E3      [19]  987 	ld	a, -29 (ix)
   0602 85            [ 4]  988 	add	a, l
   0603 6F            [ 4]  989 	ld	l, a
   0604 DD 7E E4      [19]  990 	ld	a, -28 (ix)
   0607 CE 00         [ 7]  991 	adc	a, #0x00
   0609 67            [ 4]  992 	ld	h, a
   060A DD 7E D4      [19]  993 	ld	a, -44 (ix)
   060D 77            [ 7]  994 	ld	(hl), a
                            995 ;src/text/text.c:325: colorchar[pos+FONT2_W]=color3;
   060E DD 7E E3      [19]  996 	ld	a, -29 (ix)
   0611 82            [ 4]  997 	add	a, d
   0612 6F            [ 4]  998 	ld	l, a
   0613 DD 7E E4      [19]  999 	ld	a, -28 (ix)
   0616 CE 00         [ 7] 1000 	adc	a, #0x00
   0618 67            [ 4] 1001 	ld	h, a
   0619 DD 7E D4      [19] 1002 	ld	a, -44 (ix)
   061C 77            [ 7] 1003 	ld	(hl), a
   061D 18 51         [12] 1004 	jr	00152$
   061F                    1005 00127$:
                           1006 ;src/text/text.c:327: else if(*pChar == 0x55) {
   061F DD 7E E9      [19] 1007 	ld	a, -23 (ix)
   0622 B7            [ 4] 1008 	or	a, a
   0623 28 20         [12] 1009 	jr	Z,00124$
                           1010 ;src/text/text.c:328: colorchar[pos]=color4;
   0625 DD 7E DE      [19] 1011 	ld	a, -34 (ix)
   0628 85            [ 4] 1012 	add	a, l
   0629 6F            [ 4] 1013 	ld	l, a
   062A DD 7E DF      [19] 1014 	ld	a, -33 (ix)
   062D CE 00         [ 7] 1015 	adc	a, #0x00
   062F 67            [ 4] 1016 	ld	h, a
   0630 DD 7E D1      [19] 1017 	ld	a, -47 (ix)
   0633 77            [ 7] 1018 	ld	(hl), a
                           1019 ;src/text/text.c:329: colorchar[pos+FONT2_W]=color4;
   0634 DD 7E DE      [19] 1020 	ld	a, -34 (ix)
   0637 82            [ 4] 1021 	add	a, d
   0638 6F            [ 4] 1022 	ld	l, a
   0639 DD 7E DF      [19] 1023 	ld	a, -33 (ix)
   063C CE 00         [ 7] 1024 	adc	a, #0x00
   063E 67            [ 4] 1025 	ld	h, a
   063F DD 7E D1      [19] 1026 	ld	a, -47 (ix)
   0642 77            [ 7] 1027 	ld	(hl), a
   0643 18 2B         [12] 1028 	jr	00152$
   0645                    1029 00124$:
                           1030 ;src/text/text.c:332: colorchar[pos]=*pChar;
   0645 DD 7E FB      [19] 1031 	ld	a, -5 (ix)
   0648 85            [ 4] 1032 	add	a, l
   0649 6F            [ 4] 1033 	ld	l, a
   064A DD 7E FC      [19] 1034 	ld	a, -4 (ix)
   064D CE 00         [ 7] 1035 	adc	a, #0x00
   064F 67            [ 4] 1036 	ld	h, a
   0650 DD 7E F3      [19] 1037 	ld	a, -13 (ix)
   0653 77            [ 7] 1038 	ld	(hl), a
                           1039 ;src/text/text.c:333: colorchar[pos+FONT2_W]=*pChar;
   0654 E5            [11] 1040 	push	hl
   0655 DD 6E FB      [19] 1041 	ld	l, -5 (ix)
   0658 DD 66 FC      [19] 1042 	ld	h, -4 (ix)
   065B E5            [11] 1043 	push	hl
   065C FD E1         [14] 1044 	pop	iy
   065E E1            [10] 1045 	pop	hl
   065F C5            [11] 1046 	push	bc
   0660 4A            [ 4] 1047 	ld	c,d
   0661 06 00         [ 7] 1048 	ld	b,#0x00
   0663 FD 09         [15] 1049 	add	iy, bc
   0665 C1            [10] 1050 	pop	bc
   0666 DD 6E D2      [19] 1051 	ld	l,-46 (ix)
   0669 DD 66 D3      [19] 1052 	ld	h,-45 (ix)
   066C 56            [ 7] 1053 	ld	d, (hl)
   066D FD 72 00      [19] 1054 	ld	0 (iy), d
   0670                    1055 00152$:
                           1056 ;src/text/text.c:299: for(i=0;i<18;i++){
   0670 1C            [ 4] 1057 	inc	e
   0671 7B            [ 4] 1058 	ld	a, e
   0672 D6 12         [ 7] 1059 	sub	a, #0x12
   0674 DArDCr04      [10] 1060 	jp	C, 00151$
                           1061 ;src/text/text.c:342: pvideo = cpct_getScreenPtr(CPCT_VMEM_START, xPos, yPos);
   0677 DD 66 07      [19] 1062 	ld	h, 7 (ix)
   067A DD 6E 06      [19] 1063 	ld	l, 6 (ix)
   067D E5            [11] 1064 	push	hl
   067E 21 00 C0      [10] 1065 	ld	hl, #0xc000
   0681 E5            [11] 1066 	push	hl
   0682 CDr00r00      [17] 1067 	call	_cpct_getScreenPtr
                           1068 ;src/text/text.c:343: if(transparent) cpct_drawSpriteMaskedAlignedTable(colorchar, pvideo, FONT2_W, FONT2_H*size, g_tablatrans);
   0685 DD 75 F8      [19] 1069 	ld	-8 (ix), l
   0688 DD 74 F9      [19] 1070 	ld	-7 (ix), h
   068B DD 7E 0A      [19] 1071 	ld	a, 10 (ix)
   068E B7            [ 4] 1072 	or	a, a
   068F 28 1D         [12] 1073 	jr	Z,00140$
   0691 11r00r00      [10] 1074 	ld	de, #_g_tablatrans
   0694 DD 4E DC      [19] 1075 	ld	c,-36 (ix)
   0697 DD 46 DD      [19] 1076 	ld	b,-35 (ix)
   069A D5            [11] 1077 	push	de
   069B DD 56 FF      [19] 1078 	ld	d, -1 (ix)
   069E 1E 02         [ 7] 1079 	ld	e,#0x02
   06A0 D5            [11] 1080 	push	de
   06A1 DD 6E F8      [19] 1081 	ld	l,-8 (ix)
   06A4 DD 66 F9      [19] 1082 	ld	h,-7 (ix)
   06A7 E5            [11] 1083 	push	hl
   06A8 C5            [11] 1084 	push	bc
   06A9 CDr00r00      [17] 1085 	call	_cpct_drawSpriteMaskedAlignedTable
   06AC 18 23         [12] 1086 	jr	00141$
   06AE                    1087 00140$:
                           1088 ;src/text/text.c:344: else cpct_drawSprite (colorchar, pvideo, FONT2_W, FONT2_H*size);
   06AE DD 7E E1      [19] 1089 	ld	a, -31 (ix)
   06B1 DD 77 F6      [19] 1090 	ld	-10 (ix), a
   06B4 DD 7E E2      [19] 1091 	ld	a, -30 (ix)
   06B7 DD 77 F7      [19] 1092 	ld	-9 (ix), a
   06BA DD 56 FA      [19] 1093 	ld	d, -6 (ix)
   06BD 1E 02         [ 7] 1094 	ld	e,#0x02
   06BF D5            [11] 1095 	push	de
   06C0 DD 6E F8      [19] 1096 	ld	l,-8 (ix)
   06C3 DD 66 F9      [19] 1097 	ld	h,-7 (ix)
   06C6 E5            [11] 1098 	push	hl
   06C7 DD 6E F6      [19] 1099 	ld	l,-10 (ix)
   06CA DD 66 F7      [19] 1100 	ld	h,-9 (ix)
   06CD E5            [11] 1101 	push	hl
   06CE CDr00r00      [17] 1102 	call	_cpct_drawSprite
   06D1                    1103 00141$:
                           1104 ;src/text/text.c:347: if(character == 48 || character == 60 || character == 57) xPos--;
   06D1 DD 7E D8      [19] 1105 	ld	a, -40 (ix)
   06D4 D6 30         [ 7] 1106 	sub	a, #0x30
   06D6 28 0E         [12] 1107 	jr	Z,00142$
   06D8 DD 7E D8      [19] 1108 	ld	a, -40 (ix)
   06DB D6 3C         [ 7] 1109 	sub	a, #0x3c
   06DD 28 07         [12] 1110 	jr	Z,00142$
   06DF DD 7E D8      [19] 1111 	ld	a, -40 (ix)
   06E2 D6 39         [ 7] 1112 	sub	a, #0x39
   06E4 20 03         [12] 1113 	jr	NZ,00147$
   06E6                    1114 00142$:
   06E6 DD 35 06      [23] 1115 	dec	6 (ix)
   06E9                    1116 00147$:
                           1117 ;src/text/text.c:350: character = text[++x];
   06E9 DD 34 D7      [23] 1118 	inc	-41 (ix)
   06EC DD 7E E7      [19] 1119 	ld	a, -25 (ix)
   06EF DD 86 D7      [19] 1120 	add	a, -41 (ix)
   06F2 6F            [ 4] 1121 	ld	l, a
   06F3 DD 7E E8      [19] 1122 	ld	a, -24 (ix)
   06F6 CE 00         [ 7] 1123 	adc	a, #0x00
   06F8 67            [ 4] 1124 	ld	h, a
   06F9 7E            [ 7] 1125 	ld	a, (hl)
   06FA DD 77 D9      [19] 1126 	ld	-39 (ix), a
                           1127 ;src/text/text.c:351: xPos+=FONT2_W;
   06FD DD 34 06      [23] 1128 	inc	6 (ix)
   0700 DD 34 06      [23] 1129 	inc	6 (ix)
   0703 C3r3Er04      [10] 1130 	jp	00148$
   0706                    1131 00153$:
   0706 DD F9         [10] 1132 	ld	sp, ix
   0708 DD E1         [14] 1133 	pop	ix
   070A C9            [10] 1134 	ret
                           1135 	.area _CODE
                           1136 	.area _INITIALIZER
                           1137 	.area _CABS (ABS)
